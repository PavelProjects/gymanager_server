version: '3.8'

networks:
  user_service_network:
    driver: bridge
  gateway:
    driver: bridge

volumes:
  user-db-volume:

services:
  gateway-app:
    container_name: gateway
    build:
      context: ./services/gateway
      dockerfile: Dockerfile
    networks:
      - gateway
      - user_service_network
    ports:
      - "8080:8080"
    expose:
      - 8080
    depends_on:
      - user-app
    environment:
      REDIS_PORT: ${REDIS_PORT}
      REDIS_HOST: gateway-cache
      TOKEN_CACHE_EXPIRE_TIME: 5 #sec
      USER_SERVICE_PATH: http://user-app:8080
      AUTH_SERVICE_PATH: http://user-app:8080
      UNPROTECTED_PATHS: /auth;/user/create
  gateway-cache:
    container_name: gateway-cache
    image: redis:6.2-alpine
    restart: always
    ports:
      - ${REDIS_PORT}
    expose:
      - ${REDIS_PORT}
    command: redis-server --save 20 1 --loglevel warning --port ${REDIS_PORT}
    networks:
      - gateway

  user-app:
    container_name: user-app
    build:
      context: ./services/user-service
      dockerfile: Dockerfile
    networks:
      - gateway
      - user_service_network
    depends_on:
      - user-db
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://user-db:5432/${USER_DB_NAME}
      SPRING_DATASOURCE_USERNAME: ${USER_DB_USER}
      SPRING_DATASOURCE_PASSWORD: ${USER_DB_PASSWORD}
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.postgresql.Driver
      SPRING_JPA_DATABASE_PLATFORM: org.hibernate.dialect.PostgreSQLDialect
      SPRING_JPA_HIBERNATE_DDL_AUTO: none
      SPRING_JPA_HIBERNATE_SHOW_SQL: false
      JWT_SECRET: ${JWT_SECRET}
      UNPROTECTED_PATHS: /health;/auth;/auth/validate;/user/create
    healthcheck:
      test: "curl -X GET http://user-app:8080/health"
      start_period: 5s
      retries: 5
      interval: 10s
      timeout: 1s

  user-db:
    container_name: user-db
    image: postgres:13.3
    networks:
      - user_service_network
    environment:
      POSTGRES_DB: ${USER_DB_NAME}
      POSTGRES_USER: ${USER_DB_USER}
      POSTGRES_PASSWORD: ${USER_DB_PASSWORD}
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - ./services/user-service/database/:/docker-entrypoint-initdb.d/
      - user-db-volume:/var/lib/postgresql/data/pgdata